{"version":3,"sources":["Pet.js","Results.js"],"names":["Pet","React","Component","props","name","animal","breed","media","location","id","photos","photo","filter","hero","value","petfinder","key","secret","Results","state","pets","search","pet","find","output","then","data","Array","isArray","setState","alert","map","breeds","join","contact","city","mapStateToProps"],"mappings":"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","file":"Results.eebffc7d.map","sourceRoot":"..\\src","sourcesContent":["import React from 'react';\r\nimport { Link } from '@reach/router';\r\n\r\nclass Pet extends React.Component {\r\n\trender() {\r\n\t\tconst { name, animal, breed, media, location, id } = this.props;\r\n\t\tlet photos = [];\r\n\t\tif (media && media.photos && media.photos.photo) {\r\n\t\t\tphotos = media.photos.photo.filter((photo) => photo['@size'] === 'pn');\r\n\t\t}\r\n\t\tconst hero = photos[0] ? photos[0].value : 'http://placecorgi.com/300/300';\r\n\t\treturn (\r\n\t\t\t<Link to={`/details/${id}`} className=\"pet\">\r\n\t\t\t\t<div className=\"image-container\">\r\n\t\t\t\t\t<img src={hero} alt={name} />{' '}\r\n\t\t\t\t</div>{' '}\r\n\t\t\t\t<div className=\"info\">\r\n\t\t\t\t\t<h1> {name} </h1> <h2> {`${animal} — ${breed} — ${location}`} </h2>\r\n\t\t\t\t</div>{' '}\r\n\t\t\t</Link>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Pet;\r\n","import React from 'react';\r\nimport SearchBox from './SearchBox';\r\nimport Pet from './Pet';\r\nimport pf from 'petfinder-client';\r\n\r\nimport { connect } from 'react-redux';\r\nconst petfinder = pf({\r\n\tkey: process.env.API_KEY,\r\n\tsecret: process.env.API_SECRET\r\n});\r\n\r\nclass Results extends React.Component {\r\n\tstate = {\r\n\t\tpets: []\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.search();\r\n\t}\r\n\r\n\tsearch = () => {\r\n\t\tpetfinder.pet\r\n\t\t\t.find({\r\n\t\t\t\toutput: 'full',\r\n\t\t\t\tlocation: this.props.location,\r\n\t\t\t\tanimal: this.props.animal,\r\n\t\t\t\tbreed: this.props.breed\r\n\t\t\t})\r\n\t\t\t.then((data) => {\r\n\t\t\t\tlet pets;\r\n\t\t\t\tif (data.petfinder.pets && data.petfinder.pets.pet) {\r\n\t\t\t\t\tif (Array.isArray(data.petfinder.pets.pet)) {\r\n\t\t\t\t\t\tpets = data.petfinder.pets.pet;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpets = [ data.petfinder.pets.pet ];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpets = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tpets\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t};\r\n\r\n\thandletTitleCLick() {\r\n\t\talert('Ýou clicked the title');\r\n\t}\r\n\trender() {\r\n\t\tconst { pets } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className=\"search\">\r\n\t\t\t\t<SearchBox search={this.search} />\r\n\r\n\t\t\t\t{pets.map((pet) => {\r\n\t\t\t\t\tlet breed;\r\n\t\t\t\t\tif (Array.isArray(pet.breeds.breed)) {\r\n\t\t\t\t\t\tbreed = pet.breeds.breed.join(', ');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreed = pet.breeds.breed;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Pet\r\n\t\t\t\t\t\t\tkey={pet.id}\r\n\t\t\t\t\t\t\tanimal={pet.animal}\r\n\t\t\t\t\t\t\tname={pet.name}\r\n\t\t\t\t\t\t\tbreed={breed}\r\n\t\t\t\t\t\t\tmedia={pet.media}\r\n\t\t\t\t\t\t\tlocation={`${pet.contact.city}, ${pet.contact.state}`}\r\n\t\t\t\t\t\t\tid={pet.id}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ location, breed, animal }) => ({\r\n\tlocation,\r\n\tanimal,\r\n\tbreed\r\n});\r\n\r\nexport default connect(mapStateToProps)(Results);\r\n"]}